<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.capstone.jmt.mapper.OrderMapper">

    <resultMap id="orderInfoMap" type="com.capstone.jmt.data.OrderInfo">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="orderedBy" property="orderedBy" jdbcType="VARCHAR" />
        <result column="orderedFrom" property="orderedFrom" jdbcType="VARCHAR" />
        <result column="customerAddress" property="customerAddress" jdbcType="VARCHAR" />
        <result column="waterType" property="waterType" jdbcType="VARCHAR" />
        <result column="roundOrdered" property="roundOrdered" jdbcType="INTEGER" />
        <result column="slimOrdered" property="slimOrdered" jdbcType="INTEGER" />
        <result column="costPerItem" property="costPerItem" jdbcType="DOUBLE" />
        <result column="totalCost" property="totalCost" jdbcType="DOUBLE" />
        <result column="moreDetails" property="moreDetails" jdbcType="VARCHAR" />
        <result column="createdOn" property="createdOn" jdbcType="VARCHAR" />
        <result column="updatedOn" property="updatedOn" jdbcType="VARCHAR" />
        <result column="updatedBy" property="updatedBy" jdbcType="VARCHAR" />
        <result column="ratingGiven" property="ratingGiven" jdbcType="INTEGER" />
        <result column="comments" property="comments" jdbcType="VARCHAR" />
    </resultMap>
    
    <resultMap id="orderStatusMap" type="com.capstone.jmt.data.OrderStatus">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="requestedOn" property="requestedOn" jdbcType="VARCHAR" />
        <result column="acceptedOn" property="acceptedOn" jdbcType="VARCHAR" />
        <result column="rejectedOn" property="rejectedOn" jdbcType="VARCHAR" />
        <result column="retrievedOn" property="retrievedOn" jdbcType="VARCHAR" />
        <result column="deliveredOn" property="deliveredOn" jdbcType="VARCHAR" />
        <result column="completedOn" property="completedOn" jdbcType="VARCHAR" />
        <result column="cancelledOn" property="cancelledOn" jdbcType="VARCHAR" />
        <result column="cancelledBy" property="cancelledBy" jdbcType="VARCHAR" />
        <result column="moreDetails" property="moreDetails" jdbcType="VARCHAR" />
        <result column="currentStatus" property="currentStatus" jdbcType="VARCHAR" />
    </resultMap>
    
    <resultMap id="orderContainersMap" type="com.capstone.jmt.data.CustomerLocation">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="roundQty" property="roundQty" jdbcType="INTEGER" />
        <result column="roundCost" property="roundCost" jdbcType="DOUBLE" />
        <result column="slimQty" property="slimQty" jdbcType="INTEGER" />
        <result column="slimCost" property="slimCost" jdbcType="DOUBLE" />
        <result column="totalCost" property="totalCost" jdbcType="DOUBLE" />
        <result column="createdOn" property="createdOn" jdbcType="VARCHAR" />
        <result column="updatedOn" property="updatedOn" jdbcType="VARCHAR" />
        <result column="updatedBy" property="updatedBy" jdbcType="VARCHAR" />
    </resultMap>

    <select id="getOrderInfoById" resultMap="orderInfoMap" resultType="com.capstone.jmt.data.OrderInfo">
        SELECT * FROM orderInfo WHERE id = #{id}
    </select>

    <select id="getOrderStatusById" resultMap="orderStatusMap" resultType="com.capstone.jmt.data.OrderStatus">
        SELECT * FROM orderStatus WHERE id = #{id}
    </select>

    <select id="getOrderContainersById" resultMap="orderContainersMap" resultType="com.capstone.jmt.data.OrderContainers">
        SELECT * FROM orderContainers WHERE id = #{id}
    </select>

    <insert id="addOrderInfo" parameterType="com.capstone.jmt.data.OrderInfo">
        INSERT INTO orderinfo
        (id,
        orderedBy,
        orderedFrom,
        customerAddress,
        waterType,
        roundOrdered,
        slimOrdered,
        costPerItem,
        totalCost,
        moreDetails,
        ratingGiven,
        comments)
        VALUES
        (#{order.id, jdbcType=VARCHAR},
        #{order.orderedBy, jdbcType=VARCHAR},
        #{order.orderedFrom, jdbcType=VARCHAR},
        #{order.customerAddress, jdbcType=VARCHAR},
        #{order.waterType, jdbcType=VARCHAR},
        #{order.roundOrdered , jdbcType=INTEGER},
        #{order.slimOrdered, jdbcType=INTEGER},
        #{order.costPerItem, jdbcType=DOUBLE},
        #{order.totalCost, jdbcType=DOUBLE},
        #{order.moreDetails, jdbcType=VARCHAR},
        #{order.ratingGiven, jdbcType=INTEGER},
        #{order.comments, jdbcType=VARCHAR})
    </insert>

    <update id="updateOrderInfo" flushCache="true" parameterType="com.capstone.jmt.data.OrderInfo">
        UPDATE orderInfo
        SET
        orderedBy = #{order.orderedBy, jdbcType=VARCHAR},
        orderedFrom = #{order.orderedFrom, jdbcType=VARCHAR},
        customerAddress = #{orde  r.customerAddress, jdbcType=VARCHAR},
        waterType = #{order.waterType, jdbcType=VARCHAR},
        roundOrdered = #{order.roundOrdered, jdbcType=INTEGER},
        slimordered = #{order.slimOrdered, jdbcType=INTEGER},
        costPerItem = #{order.costPerItem, jdbcType=DOUBLE},
        totalCost = #{order.totalCost, jdbcType=DOUBLE},
        moreDetails = #{order.moreDetails, jdbcType=VARCHAR}
        WHERE
        id = #{order.id, jdbcType=VARCHAR}
    </update>

    <insert id="addOrderStatus" parameterType="com.capstone.jmt.data.OrderStatus">
        INSERT INTO orderstatus
        (id,
        requestedOn,
        currentStatus)
        VALUES
        (#{order.id, jdbcType=VARCHAR},
        #{order.requestedOn, jdbcType=VARCHAR},
        #{order.currentStatus, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateOrderStatus" flushCache="true">
        UPDATE orderStatus SET
        <choose>
            <when test="status == 'ACCEPTED'">acceptedOn</when>
            <when test="status == 'REJECTED'">rejectedOn</when>
            <when test="status == 'RETRIEVED'">retrievedOn</when>
            <when test="status == 'DELIVERED'">deliveredOn</when>
            <when test="status == 'COMPLETE'">completedOn</when>
        </choose>
        = NOW(), currentStatus = #{status}
        WHERE
        id = #{orderId}
    </update>

    <update id="rejectOrderStatus" flushCache="true">
        UPDATE orderStatus SET
        cancelledOn = NOW(),
        moreDetails = #{details},
        cancelledBy = #{userId},
        currentStatus = 'CANCELLED'
        WHERE
        id = #{orderId}
    </update>
    
    <insert id="addOrderContainers" parameterType="com.capstone.jmt.data.OrderContainers">
        INSERT INTO orderContainers
        (id,
        roundQty,
        roundCost,
        slimQty,
        slimCost,
        totalCost)
        VALUES
        #{order.id, jdbcType=VARCHAR},
        #{order.roundQty, jdbcType=INTEGER},
        #{order.roundCost, jdbcType=DOUBLE},
        #{order.slimQty, jdbcType=INTEGER},
        #{order.slimCost, jdbcType=DOUBLE},
        #{order.totalCost, jdbcType=DOUBLE}
    </insert>

    <update id="updateOrderContainers" flushCache="true" parameterType="com.capstone.jmt.data.OrderContainers">
        UPDATE orderContainers
        SET
        roundQty = #{order.roundQty, jdbcType=INTEGER},
        roundCost = #{order.roundCost, jdbcType=DOUBLE},
        slimQty = #{order.slimQty, jdbcType=INTEGER},
        slimCost = #{order.slimCost, jdbcType=DOUBLE},
        totalCost = #{order.totalCost, jdbcType=DOUBLE}
        WHERE
        id = #{order.id, jdbcType=VARCHAR}
    </update>

    <select id="getOrdersByShopId" resultMap="orderInfoMap" resultType="java.util.List">
        SELECT * FROM orderInfo
        WHERE orderedFrom = #{shopId}
    </select>
</mapper>
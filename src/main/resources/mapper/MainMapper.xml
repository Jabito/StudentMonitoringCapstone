<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.capstone.jmt.mapper.MainMapper">

    <resultMap id="LastIdMap" type="com.capstone.jmt.entity.LastId">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="last_id" property="lastId" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="RefUserTypeMap" type="com.capstone.jmt.data.RefUserType">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_type" property="user_type" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="EmergencyContactMap" type="com.capstone.jmt.entity.EmergencyContact">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="contact_name" property="contactName" jdbcType="VARCHAR"/>
        <result column="relationship" property="relationship" jdbcType="VARCHAR"/>
        <result column="contact_no" property="contactNo" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="created_on" property="createdOn" jdbcType="TIMESTAMP"/>
        <result column="updated_on" property="updatedOn" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="GuidanceMap" type="com.capstone.jmt.entity.Guidance">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="teacher_fname" property="firstName" jdbcType="VARCHAR"/>
        <result column="teacher_lname" property="lastName" jdbcType="VARCHAR"/>
        <result column="position" property="position" jdbcType="VARCHAR"/>
        <result column="contact_no" property="contactNo" jdbcType="VARCHAR"/>
        <result column="created_on" property="createdOn" jdbcType="TIMESTAMP"/>
        <result column="updated_on" property="updatedOn" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ParentMap" type="com.capstone.jmt.entity.Parent">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="parent_of" property="parentOf" jdbcType="VARCHAR"/>
        <result column="relationship" property="relationship" jdbcType="VARCHAR"/>
        <result column="occupation" property="occupation" jdbcType="VARCHAR"/>
        <result column="contact_no" property="officeNo" jdbcType="VARCHAR"/>
        <result column="created_on" property="createdOn" jdbcType="TIMESTAMP"/>
        <result column="updated_on" property="updatedOn" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
        <result column="parent_name" property="parentName" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="StudentMap" type="com.capstone.jmt.entity.Student">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="first_name" property="firstName" jdbcType="VARCHAR"/>
        <result column="last_name" property="lastName" jdbcType="VARCHAR"/>
        <result column="middle_name" property="middleName" jdbcType="VARCHAR"/>
        <result column="birth_date" property="bday" jdbcType="DATE"/>
        <result column="place" property="place" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="citizenship" property="citizenship" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="contact_no" property="contactNo" jdbcType="VARCHAR"/>
        <result column="emergency_contact" property="emergencyContact" jdbcType="VARCHAR"/>
        <result column="grade_level_id" property="gradeLvlId" jdbcType="INTEGER"/>
        <result column="school_year" property="schoolYear" jdbcType="INTEGER"/>
        <result column="section" property="section" jdbcType="VARCHAR"/>
        <result column="is_old_student" property="isOldStudent" jdbcType="BOOLEAN"/>
        <result column="is_transferee" property="isTransferee" jdbcType="BOOLEAN"/>
        <result column="rfid" property="rfid" jdbcType="VARCHAR"/>
        <result column="is_enrolled" property="isEnrolled" jdbcType="BOOLEAN"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
        <result column="created_on" property="createdOn" jdbcType="TIMESTAMP"/>
        <result column="updated_on" property="updatedOn" jdbcType="TIMESTAMP"/>
        <result column="log_datetime" property="logDateTime" jdbcType="VARCHAR" />
        <result column="fullName" property="fullName" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="UserMap" type="com.capstone.jmt.entity.User">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="user_type_id" property="userTypeId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="reference_id" property="referenceId" jdbcType="VARCHAR"/>
        <result column="last_login" property="lastLogin" jdbcType="TIMESTAMP"/>
        <result column="is_locked" property="isLocked" jdbcType="BOOLEAN"/>
        <result column="created_on" property="createdOn" jdbcType="TIMESTAMP"/>
        <result column="updated_on" property="updatedOn" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getLastId" resultType="java.lang.Integer">
        SELECT last_id FROM ref_user_ids
        WHERE user_type_id = #{id}
    </select>

    <update id="incrementId" flushCache="true">
        UPDATE ref_user_ids
        SET last_id = last_id + 1
        WHERE user_type_id = #{id}
    </update>

    <select id="getUserByUsername" resultMap="UserMap" resultType="com.capstone.jmt.entity.User">
        SELECT * FROM data_users
        WHERE username = #{username}
    </select>

    <select id="getUserById" resultMap="UserMap" resultType="com.capstone.jmt.entity.User">
        SELECT * FROM data_users
        WHERE id = #{id}
    </select>

    <select id="getStudent" resultMap="StudentMap" resultType="com.capstone.jmt.entity.Student">
        SELECT * FROM data_students
        WHERE id = #{id}
    </select>

    <select id="getGuidance" resultMap="GuidanceMap" resultType="com.capstone.jmt.entity.Student">
        SELECT * FROM data_guidance
        WHERE id = #{id}
    </select>

    <select id="getParent" resultMap="ParentMap" resultType="com.capstone.jmt.entity.Parent">
        SELECT * FROM data_parents
        WHERE id = #{id}
    </select>

    <select id="getEmergencyContact" resultMap="EmergencyContactMap"
            resultType="com.capstone.jmt.entity.EmergencyContact">
        SELECT * FROM data_emergency_contact
        WHERE id = #{id}
    </select>

    <delete id="deleteStudentById" flushCache="true">
        DELETE FROM data_students
        WHERE id = #{id}
    </delete>

    <insert id="addStudent" flushCache="true">
        INSERT INTO data_students(
        id, first_name, last_name, middle_name, birth_date, place, gender, citizenship,
        address, contact_no, emergency_contact, grade_level_id, school_year, section,
        is_old_student, is_transferee, is_enrolled, created_by, rfid)
        VALUES
        (
        #{student.id, jdbcType=VARCHAR},
        #{student.firstName, jdbcType=VARCHAR},
        #{student.lastName, jdbcType=VARCHAR},
        #{student.middleName, jdbcType=VARCHAR},
        #{student.bday, jdbcType=DATE},
        #{student.place, jdbcType=VARCHAR},
        #{student.gender, jdbcType=INTEGER},
        #{student.citizenship, jdbcType=VARCHAR},
        #{student.address, jdbcType=VARCHAR},
        #{student.contactNo, jdbcType=VARCHAR},
        #{student.emergencyContact, jdbcType=VARCHAR},
        #{student.gradeLvlId, jdbcType=INTEGER},
        #{student.schoolYear, jdbcType=INTEGER},
        #{student.section, jdbcType=VARCHAR},
        #{student.isOldStudent, jdbcType=BOOLEAN},
        #{student.isTransferee, jdbcType=BOOLEAN},
        #{student.isEnrolled, jdbcType=BOOLEAN},
        #{student.createdBy, jdbcType=VARCHAR},
        #{student.rfid, jdbcType=VARCHAR}
        )
    </insert>

    <insert id="addParent" flushCache="true">
        INSERT INTO data_parents(
        id, parent_of, relationship, parent_name, occupation, office_no, email
        )
        VALUES
        (
        #{parent.id, jdbcType=VARCHAR},
        #{parent.parentOf, jdbcType=VARCHAR},
        #{parent.relationship, jdbcType=VARCHAR},
        #{parent.parentName, jdbcType=VARCHAR},
        #{parent.occupation, jdbcType=VARCHAR},
        #{parent.officeNo, jdbcType=VARCHAR},
        #{parent.email, jdbcType=VARCHAR}
        )
    </insert>

    <insert id="addEmergencyContact" flushCache="true">
        INSERT INTO data_emergency_contact
        (id, contact_of, contact_name, relationship, contact_no, address)
        VALUES(
        #{eContact.id, jdbcType=VARCHAR},
        #{eContact.contactOf, jdbcType=VARCHAR},
        #{eContact.relationship, jdbcType=VARCHAR},
        #{eContact.contactNo, jdbcType=VARCHAR},
        #{eContact.address, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateStudent" flushCache="true">
        UPDATE data_students
        SET first_name = #{student.firstName, jdbcType=VARCHAR},
        last_name = #{student.lastName, jdbcType=VARCHAR},
        middle_name = #{student.middleName, jdbcType=VARCHAR},
        birth_date = #{student.bday, jdbcType=DATE},
        place = #{student.place, jdbcType=VARCHAR},
        gender = #{student.gender, jdbcType=INTEGER},
        citizenship = #{student.citizenship, jdbcType=VARCHAR},
        address = #{student.address, jdbcType=VARCHAR},
        contact_no = #{student.contactNo},
        emergency_contact = #{student.emergencyContact, jdbcType=VARCHAR},
        grade_level_id = #{student.gradeLvlId, jdbcType=INTEGER},
        school_year = #{student.schoolYear, jdbcType=INTEGER},
        section = #{student.section, jdbcType=VARCHAR},
        is_old_student = #{student.isOldStudent, jdbcType=BOOLEAN},
        is_transferee = #{student.isTransferee, jdbcType=BOOLEAN},
        is_enrolled = #{student.isEnrolled, jdbcType=BOOLEAN},
        updated_by = #{student.updatedBy, jdbcType=VARCHAR},
        rfid = #{student.rfid, jdbcType=VARCHAR}
        WHERE id = #{student.id, jdbcType=VARCHAR}
    </update>

    <insert id="postAnnouncement" flushCache="true">
        INSERT INTO log_messages(
        posted_by,
        message_type,
        message_target,
        message_content,
        date_posted)
        VALUES (
        #{mj.postedBy, jdbcType=VARCHAR},
        #{mj.messageTypeId, jdbcType=INTEGER},
        <foreach item="id" collection="mj.targetIds" open="(" separator="," close=")">
            #{id}
        </foreach>
        , #{mj.message, jdbcType=VARCHAR},
        NOW()
        )
    </insert>

    <resultMap id="TapLogMap" type="com.capstone.jmt.data.TapLog">
        <result column="rfid" property="rfid" jdbcType="VARCHAR"/>
        <result column="log_type" property="logType" jdbcType="VARCHAR"/>
        <result column="log_datetime" property="logDateTime" jdbcType="TIMESTAMP"/>
        <result column="first_name" property="firstName" jdbcType="VARCHAR"/>
        <result column="last_name" property="lastName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getFilteredParentsBySection" resultMap="ParentMap" resultType="java.util.List">
        SELECT * FROM data_parents
        WHERE parent_of IN
        (SELECT id FROM data_students WHERE section = #{section})
    </select>

    <select id="getParentsByGradeLevelId" resultMap="ParentMap" resultType="java.util.List">
        SELECT * FROM data_parents
        WHERE parent_of IN
        (SELECT id FROM data_students WHERE grade_level_id = #{gradeLevelId})
    </select>

    <select id="getLastTapDetails" resultMap="TapLogMap" resultType="com.capstone.jmt.data.TapLog">
        SELECT TOP 1 * FROM log_taps
        WHERE rfid = #{rfid}
        ORDER BY log_datetime DESC
    </select>

    <select id="getStudentById" resultMap="StudentMap" resultType="com.capstone.jmt.data.TapLog">
        SELECT * FROM data_students
        WHERE id = #{id}
    </select>

    <select id="getGradelevelStringById" resultType="string">
        SELECT grade_level from ref_grade_level where id = #{gradeLvlId}
    </select>

    <resultMap id="MessageMap" type="com.capstone.jmt.data.MessageJson">
        <result column="posted_by" property="postedBy" jdbcType="VARCHAR"/>
        <result column="message_type" property="messageTypeId" jdbcType="VARCHAR"/>
        <result column="message_target" property="messageTarget" jdbcType="VARCHAR"/>
        <result column="date_posted" property="datePosted" jdbcType="TIMESTAMP"/>
        <result column="message_content" property="message" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getAnnouncementsByParentId" resultMap="MessageMap" resultType="java.util.List">
        SELECT * FROM log_messages
        WHERE message_target LIKE #{searchString}
        OR message_type = 3
        ORDER BY date_posted DESC
    </select>

    <resultMap id="AttendanceRowMap" type="com.capstone.jmt.data.AttendanceRow">
        <result column="date" property="date" jdbcType="DATE" />
        <result column="attendance_count" property="attendanceCount" jdbcType="INTEGER" />
    </resultMap>

    <select id="getWeeklyAttendance" resultMap="AttendanceRowMap" resultType="java.util.List">
        SELECT CAST(A.log_datetime AS DATE) as date, COUNT(A.*) as attendance_count
        FROM log_taps A
        WHERE log_type = 'IN'
        GROUP by date
        ORDER BY DATE DESC LIMIT 7
    </select>

    <insert id="addUser" flushCache="true">
        INSERT INTO data_users(
        id, username, password, reference_id, user_type_id,  email, is_locked, created_by
        )
        VALUES
        (
          #{user.id, jdbcType=VARCHAR},
          #{user.username, jdbcType=VARCHAR},
          #{user.password, jdbcType=VARCHAR},
          #{user.referenceId, jdbcType=VARCHAR},
          #{user.userTypeId, jdbcType=INTEGER},
          #{user.email, jdbcType=VARCHAR},
          #{user.isLocked, jdbcType=BOOLEAN},
          #{user.createdBy, jdbcType=VARCHAR}
        )
    </insert>

    <select id="getAllStudents" resultMap="StudentMap" resultType="java.util.List">
        SELECT * FROM data_students
    </select>

    <update id="toggleSMS" flushCache="true">
        UPDATE data_parents
        SET sms_notif = #{mode}
        WHERE id = #{parentId}
    </update>

    <insert id="processRfidTap" flushCache="true">
      INSERT INTO log_taps(
  rfid, log_type) VALUES (
  #{tapLog.rfid, jdbcType=VARCHAR},
  (SELECT CASE WHEN (SELECT log_type FROM log_taps WHERE rfid = #{tapLog.rfid, jdbcType=VARCHAR}
                     ORDER BY log_datetime desc LIMIT 1)
  = 'IN' THEN 'OUT' ELSE 'IN' END))
    </insert>

    <select id="getStudentByRfid" resultMap="StudentMap" resultType="com.capstone.jmt.entity.Student">
        SELECT * from data_students WHERE rfid = #{rfid}
    </select>

    <select id="getLastTapDetailsByStudentId" resultMap="TapLogMap" resultType="com.capstone.jmt.data.TapLog">
        SELECT * FROM log_taps
        WHERE rfid =
        (SELECT rfid FROM data_students
        WHERE id = #{studentId})
        ORDER BY log_datetime DESC
        LIMIT 1
    </select>
    <select id="getStudIn" resultMap="StudentMap" resultType="com.capstone.jmt.entity.Student">

        SELECT A.*, B.log_datetime FROM data_students A JOIN log_taps B ON a.rfid = b.rfid
        WHERE B.log_type = 'IN'
        ORDER BY B.log_datetime DESC LIMIT 1
    </select>

    <select id="getStudOut" resultMap="StudentMap" resultType="com.capstone.jmt.entity.Student">

        SELECT A.*, B.log_datetime FROM data_students A JOIN log_taps B ON a.rfid = b.rfid
        WHERE B.log_type = 'OUT'
        ORDER BY B.log_datetime DESC LIMIT 1
    </select>


    <select id="getTapListDetailsByStudentId" resultMap="TapLogMap" resultType="java.util.List">
        SELECT A.log_type, A.log_datetime, B.first_name, B.last_name FROM LOG_TAPS A JOIN data_students B
        ON A.rfid = B.rfid
        <if test="studentId != ''">
            WHERE B.id = #{studentId}
        </if>
        order by A.log_datetime desc
    </select>

    <select id="getStudentList" resultMap="StudentMap" resultType="java.util.List">
        SELECT * FROM data_students
    </select>

    <resultMap id="GradeLevelMap" type="com.capstone.jmt.data.RefGradeLevel">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="grade_level" property="gradeLevel" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="SectionMap" type="com.capstone.jmt.data.RefSection">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="grade_level" property="gradeLevel" jdbcType="VARCHAR"/>
        <result column="ref_grade_level_id" property="refGradeLvlId" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getGradeLevelList" resultMap="GradeLevelMap" resultType="java.util.List">
        SELECT * FROM ref_grade_level
        ORDER BY id ASC
    </select>

    <select id="getSectionList" resultMap="SectionMap" resultType="java.util.List">
        SELECT * FROM ref_section WHERE ref_grade_level_id = #{gradeLvlId}
    </select>

    <insert id="addTeacher" flushCache="true">
        INSERT INTO data_guidance(id, teacher_fname, teacher_lname, position, contact_no, created_by)
        VALUES
        (
        #{guidance.id, jdbcType=VARCHAR},
        #{guidance.firstName, jdbcType=VARCHAR},
        #{guidance.lastName, jdbcType=VARCHAR},
        #{guidance.position, jdbcType=VARCHAR},
        #{guidance.contactNo, jdbcType=VARCHAR},
        #{guidance.createdBy, jdbcType=VARCHAR}
        )
    </insert>

    <resultMap id="GuidanceLogMap" type="com.capstone.jmt.data.GuidanceRecord">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="student_id" property="studentId" jdbcType="VARCHAR"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="created_on" property="createdOn" jdbcType="TIMESTAMP"/>
        <result column="updated_on" property="updatedOn" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="addGuidanceRecord">
        INSERT INTO log_guidance(id, student_id, reason, title, created_on, created_by)
        VALUES
        (
        #{gr.id, jdbcType=VARCHAR},
        #{gr.studentId, jdbcType=VARCHAR},
        #{gr.reason, jdbcType=VARCHAR},
        #{gr.title, jdbcType=VARCHAR},
        #{gr.created_on, jdbcType=TIMESTAMP},
        #{gr.created_by, jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="saveImage" parameterType="com.capstone.jmt.data.PictureObject" flushCache="true">
        INSERT INTO data_images (
        userid,
        file_id,
        content_type,
        original_file_name,
        file_suffix
        )
        VALUES
        (
        #{imageHolder.studentId, jdbcType=VARCHAR},
        #{imageHolder.fileId, jdbcType=VARCHAR},
        #{imageHolder.contentType, jdbcType=VARCHAR},
        #{imageHolder.originalFileName, jdbcType=VARCHAR},
        #{imageHolder.fileSuffix, jdbcType=VARCHAR}
        )
    </insert>

    <select id="getGuidanceRecord" resultMap="GuidanceLogMap" resultType="java.util.List">
        SELECT * FROM log_guidance
        WHERE student_id = #{studentId}
    </select>

    <resultMap id="PictureObjectMap" type="com.capstone.jmt.data.PictureObject">
        <result column="userid" property="studentId" jdbcType="VARCHAR"/>
        <result column="original_file_name" property="originalFileName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="retrieveImage" resultMap="PictureObjectMap" resultType="com.capstone.jmt.data.PictureObject">
        SELECT userid,original_file_name
        FROM data_images WHERE userid = #{userId} LIMIT 1
    </select>


    <select id="getAnnouncementsByUserId" resultMap="MessageMap" resultType="com.capstone.jmt.data.MessageJson">
        SELECT * FROM log_messages A
WHERE posted_by = #{userId}
OR message_type = 3
OR(message_type = 2
AND #{userId} IN (
  SELECT id FROM data_parents B WHERE parent_of IN (
    SELECT id from data_students C WHERE A.message_target LIKE '%' || C.section || '%'
    )
  )
)
OR(message_type = 1
AND #{userId} IN (
    SELECT id FROM data_parents B WHERE parent_of IN(
      SELECT id from data_students D WHERE A.message_target LIKE '%' || CAST(D.grade_level_id AS VARCHAR) || '%'
    )
  )
)
OR(message_type = 0
AND #{userId} IN (
    SELECT id FROM data_parents B where parent_of IN(
      SELECT id from data_students E WHERE A.message_target LIKE '%' || E.id || '%'
    )
  )
)
    </select>

    <select id="getStudentsBySearchString" resultMap="StudentMap" resultType="java.util.List">
        SELECT *, (first_name || ' ' || last_name) AS fullName FROM data_students
        WHERE first_name LIKE #{searchString}
        OR last_name LIKE #{searchString}
        OR middle_name LIKE #{searchString}
    </select>

    <select id="getUserType" resultMap="RefUserTypeMap" resultType="java.util.List">
        SELECT * FROM ref_user_type
    </select>

    <select id="getTapAllTopLogs" resultMap="TapLogMap" resultType="java.util.List">
        SELECT A.*, B.first_name, B.last_name FROM log_taps A JOIN data_students B
        ON A.rfid = B.rfid
    </select>

    <resultMap id="UserTypeMap" type="com.capstone.jmt.data.UserList">
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="userId" property="userId" jdbcType="VARCHAR" />
    </resultMap>

    <select id="getUsersByUserTypeId" resultMap="UserTypeMap" resultType="com.capstone.jmt.data.UserList">
      <choose>
          <when test="userTypeId == 1">
              SELECT (teacher_fname || teacher_lname) as name, id as userId
              FROM data_guidance

          </when>
          <when test="userTypeId == 2">
              SELECT parent_name as name, id as userId
              FROM data_parents
          </when>
      </choose>
        ORDER BY name asc
    </select>
    <select id="getParentByStudentId" resultMap="ParentMap" resultType="com.capstone.jmt.entity.Parent">
        SELECT * FROM data_parents WHERE parent_of = #{studentId}
    </select>
</mapper>
